name: Test

on:
  push:
    branches: [master, main, develop]
  pull_request:
    branches: [master, main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      LOG_LEVEL: "DEBUG"
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements-dev.txt') }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
        pip install -e .
    
    - name: Run linting
      run: |
        ruff check src/ tests/
    
    - name: Run type checking
      run: |
        mypy src/
    
    - name: Run unit tests
      run: |
        pytest tests/unit -v
    
    - name: Run integration tests (no API key required)
      run: |
        pytest tests/integration -v -m "not requires_api_key"
    
    - name: Run integration tests (with API key)
      if: secrets.OPENAI_API_KEY != ''
      run: |
        pytest tests/integration -v -m "requires_api_key"
    
    - name: Generate coverage report
      run: |
        pytest --cov=src/ollama_openai_proxy --cov-report=xml --cov-report=term
    
    - name: Check coverage threshold
      run: |
        coverage report --fail-under=80
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true