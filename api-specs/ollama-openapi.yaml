openapi: 3.0.3
info:
  title: Ollama API
  version: 0.1.0
  description: OpenAPI specification for Ollama REST API (extracted from Postman collection)
  contact:
    name: Ollama
    url: https://ollama.ai

servers:
  - url: http://localhost:11434
    description: Default local Ollama server

paths:
  /api/tags:
    get:
      summary: List local models
      operationId: listModels
      tags:
        - Model Management
      description: List all models that have been downloaded locally
      responses:
        '200':
          description: Successfully retrieved list of models
          content:
            application/json:
              schema:
                type: object
                required:
                  - models
                properties:
                  models:
                    type: array
                    items:
                      $ref: '#/components/schemas/ModelInfo'
              example:
                models:
                  - name: "llama3.1:latest"
                    model: "llama3.1:latest"
                    modified_at: "2025-01-21T16:53:57.496699591-08:00"
                    size: 4920753328
                    digest: "46e0c10c039e019119339687c3c1757cc81b9da49709a3b3924863ba87ca666e"
                    details:
                      parent_model: ""
                      format: "gguf"
                      family: "llama"
                      families: ["llama"]
                      parameter_size: "8.0B"
                      quantization_level: "Q4_K_M"

  /api/generate:
    post:
      summary: Generate completion
      operationId: generateCompletion
      tags:
        - Text Generation
      description: Generate text completion for a given prompt
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateRequest'
      responses:
        '200':
          description: Successfully generated completion
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/GenerateResponse'
                  - $ref: '#/components/schemas/GenerateStreamResponse'

  /api/chat:
    post:
      summary: Generate chat completion
      operationId: generateChatCompletion
      tags:
        - Chat
      description: Generate a chat completion for multi-turn conversations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRequest'
      responses:
        '200':
          description: Successfully generated chat completion
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ChatResponse'
                  - $ref: '#/components/schemas/ChatStreamResponse'

  /api/show:
    post:
      summary: Show model information
      operationId: showModel
      tags:
        - Model Management
      description: Show detailed information about a specific model
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  description: Name of the model
                  example: "llama3.1:latest"
      responses:
        '200':
          description: Successfully retrieved model information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelDetails'

  /api/create:
    post:
      summary: Create a model
      operationId: createModel
      tags:
        - Model Management
      description: Create a model from a Modelfile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - modelfile
              properties:
                name:
                  type: string
                  description: Name to assign to the model
                modelfile:
                  type: string
                  description: Contents of the Modelfile
                stream:
                  type: boolean
                  default: true
                  description: Whether to stream the response
      responses:
        '200':
          description: Model creation initiated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateResponse'

  /api/copy:
    post:
      summary: Copy a model
      operationId: copyModel
      tags:
        - Model Management
      description: Create a copy of a model with a new name
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - source
                - destination
              properties:
                source:
                  type: string
                  description: Name of the source model
                destination:
                  type: string
                  description: Name for the new model
      responses:
        '200':
          description: Model copied successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string

  /api/delete:
    delete:
      summary: Delete a model
      operationId: deleteModel
      tags:
        - Model Management
      description: Delete a model and its data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  description: Name of the model to delete
      responses:
        '200':
          description: Model deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string

  /api/pull:
    post:
      summary: Pull a model
      operationId: pullModel
      tags:
        - Model Management
      description: Download a model from the Ollama library
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  description: Name of the model to pull
                stream:
                  type: boolean
                  default: true
                  description: Whether to stream the download progress
      responses:
        '200':
          description: Model pull initiated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PullResponse'

  /api/push:
    post:
      summary: Push a model
      operationId: pushModel
      tags:
        - Model Management
      description: Upload a model to a model library
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  description: Name of the model to push
                stream:
                  type: boolean
                  default: true
      responses:
        '200':
          description: Model push initiated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushResponse'

  /api/embed:
    post:
      summary: Generate embeddings
      operationId: generateEmbeddings
      tags:
        - Embeddings
      description: Generate embeddings for the given text
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - model
                - input
              properties:
                model:
                  type: string
                  description: Name of the model to use
                input:
                  type: string
                  description: Text to generate embeddings for
      responses:
        '200':
          description: Successfully generated embeddings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbedResponse'

  /api/ps:
    get:
      summary: List running models
      operationId: listRunningModels
      tags:
        - Model Management
      description: List models that are currently loaded in memory
      responses:
        '200':
          description: Successfully retrieved running models
          content:
            application/json:
              schema:
                type: object
                properties:
                  models:
                    type: array
                    items:
                      $ref: '#/components/schemas/RunningModel'

  /api/version:
    get:
      summary: Get Ollama version
      operationId: getVersion
      tags:
        - System
      description: Get the version of Ollama
      responses:
        '200':
          description: Successfully retrieved version
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string
                    example: "0.1.22"

components:
  schemas:
    ModelInfo:
      type: object
      required:
        - name
        - model
        - modified_at
        - size
        - digest
      properties:
        name:
          type: string
          description: Name of the model
          example: "llama3.1:latest"
        model:
          type: string
          description: Model identifier (same as name)
          example: "llama3.1:latest"
        modified_at:
          type: string
          format: date-time
          description: Last modification timestamp
          example: "2025-01-21T16:53:57.496699591-08:00"
        size:
          type: integer
          format: int64
          description: Size in bytes
          example: 4920753328
        digest:
          type: string
          description: SHA256 digest of the model
          example: "46e0c10c039e019119339687c3c1757cc81b9da49709a3b3924863ba87ca666e"
        details:
          $ref: '#/components/schemas/ModelDetailsInfo'

    ModelDetailsInfo:
      type: object
      properties:
        parent_model:
          type: string
          default: ""
        format:
          type: string
          example: "gguf"
        family:
          type: string
          example: "llama"
        families:
          type: array
          items:
            type: string
          example: ["llama"]
        parameter_size:
          type: string
          example: "8.0B"
        quantization_level:
          type: string
          example: "Q4_K_M"

    GenerateRequest:
      type: object
      required:
        - model
        - prompt
      properties:
        model:
          type: string
          description: Name of the model to use
        prompt:
          type: string
          description: The prompt to generate from
        images:
          type: array
          items:
            type: string
            format: byte
          description: Base64-encoded images for multimodal models
        format:
          type: string
          enum: [json]
          description: Format to return response in
        options:
          $ref: '#/components/schemas/ModelOptions'
        system:
          type: string
          description: System message to use
        template:
          type: string
          description: Prompt template to use
        context:
          type: array
          items:
            type: integer
          description: Context from previous request
        stream:
          type: boolean
          default: true
          description: Whether to stream the response
        raw:
          type: boolean
          default: false
          description: Whether to use raw mode (no templating)
        suffix:
          type: string
          description: Text that should appear at the end of the response
        keep_alive:
          type: string
          description: How long to keep the model loaded

    GenerateResponse:
      type: object
      properties:
        model:
          type: string
        created_at:
          type: string
          format: date-time
        response:
          type: string
        done:
          type: boolean
        done_reason:
          type: string
          enum: [stop, length, load]
        context:
          type: array
          items:
            type: integer
        total_duration:
          type: integer
          format: int64
        load_duration:
          type: integer
          format: int64
        prompt_eval_count:
          type: integer
        prompt_eval_duration:
          type: integer
          format: int64
        eval_count:
          type: integer
        eval_duration:
          type: integer
          format: int64

    GenerateStreamResponse:
      type: object
      description: Streaming response format (newline-delimited JSON)
      properties:
        model:
          type: string
        created_at:
          type: string
          format: date-time
        response:
          type: string
        done:
          type: boolean

    ChatRequest:
      type: object
      required:
        - model
        - messages
      properties:
        model:
          type: string
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
        format:
          type: string
          enum: [json]
        options:
          $ref: '#/components/schemas/ModelOptions'
        stream:
          type: boolean
          default: true
        tools:
          type: array
          items:
            $ref: '#/components/schemas/Tool'

    Message:
      type: object
      required:
        - role
        - content
      properties:
        role:
          type: string
          enum: [system, user, assistant, tool]
        content:
          type: string
        images:
          type: array
          items:
            type: string
            format: byte
        tool_calls:
          type: array
          items:
            $ref: '#/components/schemas/ToolCall'

    ChatResponse:
      type: object
      properties:
        model:
          type: string
        created_at:
          type: string
          format: date-time
        message:
          $ref: '#/components/schemas/Message'
        done:
          type: boolean
        done_reason:
          type: string
        total_duration:
          type: integer
          format: int64
        load_duration:
          type: integer
          format: int64
        prompt_eval_count:
          type: integer
        prompt_eval_duration:
          type: integer
          format: int64
        eval_count:
          type: integer
        eval_duration:
          type: integer
          format: int64

    ChatStreamResponse:
      type: object
      properties:
        model:
          type: string
        created_at:
          type: string
          format: date-time
        message:
          $ref: '#/components/schemas/Message'
        done:
          type: boolean

    ModelOptions:
      type: object
      description: Model runtime options
      properties:
        temperature:
          type: number
          format: float
          minimum: 0
          maximum: 2
        top_p:
          type: number
          format: float
          minimum: 0
          maximum: 1
        top_k:
          type: integer
          minimum: 1
        seed:
          type: integer
        num_predict:
          type: integer
        num_ctx:
          type: integer
        stop:
          type: array
          items:
            type: string

    ModelDetails:
      type: object
      properties:
        license:
          type: string
        modelfile:
          type: string
        parameters:
          type: string
        template:
          type: string
        system:
          type: string
        details:
          $ref: '#/components/schemas/ModelDetailsInfo'
        model_info:
          type: object

    Tool:
      type: object
      required:
        - type
        - function
      properties:
        type:
          type: string
          enum: [function]
        function:
          type: object
          required:
            - name
            - description
            - parameters
          properties:
            name:
              type: string
            description:
              type: string
            parameters:
              type: object

    ToolCall:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          enum: [function]
        function:
          type: object
          properties:
            name:
              type: string
            arguments:
              type: string

    CreateResponse:
      type: object
      properties:
        status:
          type: string
          enum: [success, parsing modelfile]

    PullResponse:
      type: object
      properties:
        status:
          type: string
        digest:
          type: string
        total:
          type: integer
          format: int64
        completed:
          type: integer
          format: int64

    PushResponse:
      type: object
      properties:
        status:
          type: string
        digest:
          type: string
        total:
          type: integer
          format: int64

    EmbedResponse:
      type: object
      properties:
        embeddings:
          type: array
          items:
            type: array
            items:
              type: number
              format: float

    RunningModel:
      type: object
      properties:
        name:
          type: string
        model:
          type: string
        size:
          type: integer
          format: int64
        digest:
          type: string
        expires_at:
          type: string
          format: date-time